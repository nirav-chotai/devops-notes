apiVersion: ceph.rook.io/v1
kind: CephBlockPool
metadata:
  name: replicapool
  namespace: {{  .Release.Namespace }}
spec:
  failureDomain: {{ .Values.replicapool.failureDomain }}
  replicated:
    size: {{ .Values.replicapool.replicated.size }}
    requireSafeReplicaSize: {{ .Values.replicapool.replicated.requireSafeReplicaSize }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
   name: rook-ceph-block
provisioner: rook-ceph.rbd.csi.ceph.com
parameters:
    # clusterID is the namespace where the rook cluster is running
    # If you change this namespace, also change the namespace below where the secret namespaces are defined
    clusterID: {{  .Release.Namespace }}
    pool: replicapool
    imageFormat: "{{ .Values.storageclass.imageFormat }}"
    imageFeatures: {{ .Values.storageclass.imageFeatures }}

    # The secrets contain Ceph admin credentials. These are generated automatically by the operator
    # in the same namespace as the cluster.
    csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
    csi.storage.k8s.io/provisioner-secret-namespace: {{  .Release.Namespace }}
    csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
    csi.storage.k8s.io/controller-expand-secret-namespace: {{  .Release.Namespace }}
    csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
    csi.storage.k8s.io/node-stage-secret-namespace: {{  .Release.Namespace }}

    csi.storage.k8s.io/fstype: {{ .Values.storageclass.fstype }}

allowVolumeExpansion: {{ .Values.storageclass.allowVolumeExpansion }}
reclaimPolicy: {{ .Values.storageclass.reclaimPolicy }}
---
{{ if eq .Values.storage.env "dev" -}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: rook-cephfs
# Change "rook-ceph" provisioner prefix to match the operator namespace if needed
provisioner: rook-ceph.cephfs.csi.ceph.com
parameters:
  # clusterID is the namespace where operator is deployed.
  clusterID: {{  .Release.Namespace }}

  # CephFS filesystem name into which the volume shall be created
  fsName: myfs

  # Ceph pool into which the volume shall be created
  # Required for provisionVolume: "true"
  pool: myfs-data0

  # Root path of an existing CephFS volume
  # Required for provisionVolume: "false"
  # rootPath: /absolute/path

  # The secrets contain Ceph admin credentials. These are generated automatically by the operator
  # in the same namespace as the cluster.
  csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
  csi.storage.k8s.io/provisioner-secret-namespace: {{  .Release.Namespace }}
  csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
  csi.storage.k8s.io/controller-expand-secret-namespace: {{  .Release.Namespace }}
  csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
  csi.storage.k8s.io/node-stage-secret-namespace: {{  .Release.Namespace }}

allowVolumeExpansion: {{ .Values.storageclass.allowVolumeExpansion }}
reclaimPolicy: {{ .Values.storageclass.reclaimPolicy }}
{{- end }}